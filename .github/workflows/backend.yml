on:
  workflow_call:
  push:
    paths:
      - backend/**
  workflow_dispatch:
  
jobs:
  build_app: # and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
    
      - name: npm install and build backend
        run: |
          cd ./backend
          npm install
          npm audit fix
          npm run build --if-present
          npm run test --if-present
    
      - name: Audit backend
        run: |
          cd ./backend
          npm audit | grep -E "high|critical" && echo "Vulnerabilities found" || echo "No vulnerabilities found"
    
      - name: Run esLint on backend
        run: |
          cd ./backend
          npm run lint

  test_app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run unit test
        run: echo "TODO unit test"
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        with:
          args: --sarif-file-output=snyk.sarif
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  # audit_security:
  #   runs-on: ubuntu-latest
  #   env:
  #     SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@m  aster
      
  #     - name: Install Snyk
  #       run: npm install -g snyk

  #     # - name: Auth Snyk
  #     #   shell: bash
  #     #   env:
  #     #     SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
  #     #   run: |
  #     #     snyk auth --auth-type=token "$SNYK_TOKEN"

  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/node@master
  #       with:
  #         args: test --severity-threshold=high --sarif-file-output=snyk.sarif

  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: snyk.sarif
